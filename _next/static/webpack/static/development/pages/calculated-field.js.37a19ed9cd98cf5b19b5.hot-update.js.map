{"version":3,"file":"static/webpack/static/development/pages/calculated-field.js.37a19ed9cd98cf5b19b5.hot-update.js","sources":["webpack:///./middlewares/Input.tsx"],"sourcesContent":["import * as React from 'react';\nimport get from 'lodash/get';\nimport { Input } from 'antd';\nimport { AntdFormMiddlewareProps } from './share';\nconst { TextArea, Password } = Input;\n\nexport const InputMw: React.ComponentType<AntdFormMiddlewareProps> = (props) => {\n  const { next, schema, data, onChange, extraProps } = props;\n  if (typeof schema === 'boolean' || schema.type !== 'string') return next(props);\n  return (\n    <Input\n      value={data || ''}\n      onChange={(e: any) => {\n        onChange(e.target.value || undefined);\n      }}\n      {...get(extraProps, 'props')}\n    />\n  );\n};\n\nexport const TextAreaMw: React.ComponentType<AntdFormMiddlewareProps> = (props) => {\n  const { next, schema, data, onChange, extraProps } = props;\n  if (typeof schema === 'boolean' || schema.type !== 'string' || get(extraProps, 'component') !== 'TextArea')\n    return next(props);\n  return (\n    <TextArea\n      value={data || ''}\n      onChange={(e: any) => {\n        onChange(e.target.value || undefined);\n      }}\n      {...get(extraProps, 'props')}\n    />\n  );\n};\n\nexport const PasswordMw: React.ComponentType<AntdFormMiddlewareProps> = (props) => {\n  const { next, schema, data, onChange, extraProps } = props;\n  if (typeof schema === 'boolean' || schema.type !== 'string' || get(extraProps, 'component') !== 'Password')\n    return next(props);\n  return (\n    <Password\n      value={data || ''}\n      onChange={(e: any) => {\n        onChange(e.target.value || undefined);\n      }}\n      {...get(extraProps, 'props')}\n    />\n  );\n};\n\nexport default InputMw;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;;;;A","sourceRoot":""}
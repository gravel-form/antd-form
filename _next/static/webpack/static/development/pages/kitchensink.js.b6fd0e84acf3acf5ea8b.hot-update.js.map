{"version":3,"file":"static/webpack/static/development/pages/kitchensink.js.b6fd0e84acf3acf5ea8b.hot-update.js","sources":["webpack:///./Form.tsx","webpack:///./components/DemoForm.tsx"],"sourcesContent":["import * as React from 'react';\nimport get from 'lodash/get';\nimport { AntdFormProps, FormCore, AntdFormMiddlewareProps } from './middlewares/share';\nimport { Form as AntdForm } from 'antd';\n\nconst Form: React.FC<AntdFormProps> = (props) => {\n  const { onChange } = props;\n  const [data, setData] = React.useState(props.data || props.defaultData);\n  const { current: isControlled } = React.useRef(props.data !== undefined);\n  const handleChange = (newData: unknown) => {\n    if (!isControlled) {\n      setData(newData);\n    }\n    onChange && onChange(newData);\n  };\n\n  const { colon, hideRequiredMark, labelAlign, labelCol, layout, name, size } = props;\n\n  return (\n    <AntdForm {...{ colon, hideRequiredMark, labelAlign, labelCol, layout, name, size }}>\n      <FormCore {...props} onChange={handleChange} data={data} />\n    </AntdForm>\n  );\n};\n\nexport function withName(list: [string, React.FC<AntdFormMiddlewareProps>][]): React.FC<AntdFormMiddlewareProps>[] {\n  return list.map(([name, Component]) => {\n    const C: React.FC<AntdFormMiddlewareProps> = (props: AntdFormMiddlewareProps) => {\n      if (get(props.extraProps, 'component') !== name) return props.next(props);\n      return <Component {...props} />;\n    };\n    return C;\n  });\n}\n\nexport default Form;\n","import * as React from 'react';\nimport { Card, Row, Col } from 'antd';\n\nimport Form, { withName } from '../Form';\n\nimport { FixedObjectMw, FixedArrayMw, schemaMws } from '../middlewares/share';\n\nimport DatePickerMw from '../middlewares/DatePicker';\nimport ExtraPropsMw from '../middlewares/ExtraPropsMw';\nimport FormItemTemplateMw from '../middlewares/FormItemTemplateMw';\nimport ValidateMw from '../middlewares/ValidateMw';\nimport NotSupported from '../middlewares/NotSupported';\nimport ErrorListMw from '../middlewares/ErrorListMw';\nimport InputMw, { TextAreaMw, PasswordMw } from '../middlewares/Input';\nimport InputNumberMw from '../middlewares/InputNumber';\nimport FieldsetTemplateMw from '../middlewares/FieldsetTemplateMw';\nimport CheckboxGroupMw from '../middlewares/CheckboxGroup';\nimport SelectMw from '../middlewares/Select';\nimport { SubmitButtonMw, SubmitButtonWithValidationMw } from '../middlewares/SubmitButtonMw';\nimport RadioGroupMw from '../middlewares/RadioGroupMw';\nimport CheckboxMw from '../middlewares/CheckboxMw';\nimport SwitchMw from '../middlewares/SwitchMw';\nimport RateMw from '../middlewares/RateMw';\nimport { RowMw, ColMw } from '../middlewares/GridMw';\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\n\nimport FormDataViewerMw from '../components/FormDataViewerMw';\n\nconst map: any = {\n  schemaMws,\n  SubmitButtonMw,\n  SubmitButtonWithValidationMw,\n  ValidateMw,\n  ExtraPropsMw,\n  ErrorListMw,\n\n  RowMw,\n  ColMw,\n  FieldsetTemplateMw,\n  FormItemTemplateMw,\n  FixedObjectMw,\n  FixedArrayMw,\n\n  // array, enum, unique\n  CheckboxGroupMw,\n\n  // boolean\n  SwitchMw,\n  CheckboxMw,\n\n  // enum\n  RadioGroupMw,\n  SelectMw,\n\n  // integer\n  RateMw,\n  // number, integer\n  InputNumberMw,\n\n  // string\n  DatePickerMw,\n  TextAreaMw,\n  PasswordMw,\n  InputMw,\n\n  NotSupported,\n\n  // dev\n  FormDataViewerMw,\n};\n\nconst DemoForm: React.FC<{ code: string; scope?: { [key: string]: any } | React.ReactElement }> = ({ code, scope }) => {\n  if (typeof code === 'string') {\n    return (\n      <LiveProvider\n        code={code}\n        scope={{\n          Form,\n          withName,\n          ...map,\n          Ajv: require('ajv'),\n          Antd: require('antd'),\n          ReactAsyncHook: require('react-async-hook'),\n          GravelFormCore: require('../core/src'),\n          Bluebird: require('bluebird'),\n          Lodash: require('lodash'),\n          ...scope,\n        }}\n        noInline={true}\n      >\n        <Row>\n          <Col span={12}>\n            <Card style={{ height: '100vh', overflowY: 'auto' }}>\n              <LiveEditor />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card style={{ height: '100vh', overflowY: 'auto' }}>\n              <LiveError />\n              <LivePreview />\n            </Card>\n          </Col>\n        </Row>\n      </LiveProvider>\n    );\n  }\n  return (\n    <Row>\n      <Col span={12}>\n        <Card></Card>\n      </Col>\n      <Col span={12}>\n        <Card>{code}</Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default DemoForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAxCA;AACA;AA0CA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgsourceRoot":""}
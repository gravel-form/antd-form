{"version":3,"file":"static/webpack/static/development/pages/basic.js.6e1e18581e0731f4f2e3.hot-update.js","sources":["webpack:///./Form.tsx","webpack:///./components/DemoForm.tsx","webpack:///./middlewares/index.ts","webpack:///./pages/basic.tsx"],"sourcesContent":["import * as React from 'react';\nimport get from 'lodash/get';\nimport { AntdFormProps, FormCore, AntdFormMiddlewareProps } from './middlewares/share';\nimport { Form as AntdForm } from 'antd';\n\nconst Form: React.FC<AntdFormProps> = (props) => {\n  const { onChange } = props;\n  const [data, setData] = React.useState(props.data || props.defaultData);\n  const { current: isControlled } = React.useRef(props.data !== undefined);\n  const handleChange = (newData: unknown) => {\n    if (!isControlled) {\n      setData(newData);\n    }\n    onChange && onChange(newData);\n  };\n\n  const { colon, hideRequiredMark, labelAlign, labelCol, layout, name, size } = props;\n\n  return (\n    <AntdForm {...{ colon, hideRequiredMark, labelAlign, labelCol, layout, name, size }}>\n      <FormCore {...props} onChange={handleChange} data={data} />\n    </AntdForm>\n  );\n};\n\nexport default Form;\n","import * as React from 'react';\nimport { Card, Row, Col } from 'antd';\n\nimport Form from '../Form';\nimport { withName } from '../middlewares';\n\nimport { FixedObjectMw, FixedArrayMw, schemaMws } from '../middlewares/share';\n\nimport DatePickerMw from '../middlewares/DatePickerMw';\nimport TimePickerMw from '../middlewares/TimePickerMw';\nimport ExtraPropsMw from '../middlewares/ExtraPropsMw';\nimport FormItemTemplateMw from '../middlewares/FormItemTemplateMw';\nimport ValidateMw from '../middlewares/ValidateMw';\nimport NotSupportedMw from '../middlewares/NotSupportedMw';\nimport ErrorListMw from '../middlewares/ErrorListMw';\nimport InputMw, { TextAreaMw, PasswordMw } from '../middlewares/InputMw';\nimport InputNumberMw from '../middlewares/InputNumberMw';\nimport FieldsetTemplateMw from '../middlewares/FieldsetTemplateMw';\nimport CheckboxGroupMw from '../middlewares/CheckboxGroupMw';\nimport SelectMw from '../middlewares/SelectMw';\nimport { SubmitButtonMw, SubmitButtonWithValidationMw } from '../middlewares/SubmitButtonMw';\nimport RadioGroupMw from '../middlewares/RadioGroupMw';\nimport CheckboxMw from '../middlewares/CheckboxMw';\nimport SwitchMw from '../middlewares/SwitchMw';\nimport RateMw from '../middlewares/RateMw';\nimport SliderMw from '../middlewares/SliderMw';\nimport { RowMw, ColMw } from '../middlewares/GridMw';\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\n\nimport FormDataViewerMw from '../components/FormDataViewerMw';\n\nconst map: any = {\n  schemaMws,\n  SubmitButtonMw,\n  SubmitButtonWithValidationMw,\n  ValidateMw,\n  ExtraPropsMw,\n  ErrorListMw,\n\n  RowMw,\n  ColMw,\n  FieldsetTemplateMw,\n  FormItemTemplateMw,\n  FixedObjectMw,\n  FixedArrayMw,\n\n  // array, enum, unique\n  CheckboxGroupMw,\n\n  // boolean\n  SwitchMw,\n  CheckboxMw,\n\n  // enum\n  RadioGroupMw,\n  SelectMw,\n\n  // integer\n  RateMw,\n  // number, integer\n  InputNumberMw,\n  SliderMw,\n\n  // string\n  DatePickerMw,\n  TimePickerMw,\n  TextAreaMw,\n  PasswordMw,\n  InputMw,\n\n  NotSupportedMw,\n\n  // dev\n  FormDataViewerMw,\n};\n\nconst DemoForm: React.FC<{ code: string; scope?: { [key: string]: any } | React.ReactElement }> = ({ code, scope }) => {\n  if (typeof code === 'string') {\n    return (\n      <LiveProvider\n        code={code}\n        scope={{\n          Form,\n          withName,\n          ...map,\n          Ajv: require('ajv'),\n          Antd: require('antd'),\n          ReactAsyncHook: require('react-async-hook'),\n          GravelFormCore: require('../core/src'),\n          Bluebird: require('bluebird'),\n          Lodash: require('lodash'),\n          ...scope,\n        }}\n        noInline={true}\n      >\n        <Row>\n          <Col span={12}>\n            <Card style={{ height: '100vh', overflowY: 'auto' }}>\n              <LiveEditor />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card style={{ height: '100vh', overflowY: 'auto' }}>\n              <LiveError />\n              <LivePreview />\n            </Card>\n          </Col>\n        </Row>\n      </LiveProvider>\n    );\n  }\n  return (\n    <Row>\n      <Col span={12}>\n        <Card></Card>\n      </Col>\n      <Col span={12}>\n        <Card>{code}</Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default DemoForm;\n","import * as React from 'react';\nimport get from 'lodash/get';\nimport { JSONSchema7Definition } from 'json-schema';\n\nimport { AntdFormMiddlewareProps } from './share';\nimport { schemaMws } from '../core/src';\n\nimport DatePickerMw from './DatePickerMw';\nimport ExtraPropsMw from './ExtraPropsMw';\nimport FormItemTemplateMw from './FormItemTemplateMw';\nimport ValidateMw from './ValidateMw';\nimport NotSupportedMw from './NotSupportedMw';\nimport ErrorListMw from './ErrorListMw';\nimport InputMw, { TextAreaMw } from './InputMw';\nimport InputNumberMw from './InputNumberMw';\nimport FieldsetTemplateMw from './FieldsetTemplateMw';\nimport CheckboxGroupMw from './CheckboxGroupMw';\nimport SelectMw from './SelectMw';\nimport SubmitButtonMw from './SubmitButtonMw';\n\nexport function withName(list: [string, React.FC<AntdFormMiddlewareProps>][]): React.FC<AntdFormMiddlewareProps>[] {\n  return list.map(([name, component]) => {\n    const componentWithName: React.FC<AntdFormMiddlewareProps> = (props: AntdFormMiddlewareProps) => {\n      if (get(props.extraProps, 'component') !== name) return props.next(props);\n      return component(props);\n    };\n    return componentWithName;\n  });\n}\n\nexport const preset = [\n  FormDataViewerMw,\n\n  // SubmitButtonMw,\n  // ValidateMw,\n  SubmitButtonWithValidationMw,\n\n  ExtraPropsMw,\n  ColMw,\n  FieldsetTemplateMw,\n  RowMw,\n  ...schemaMws,\n  FormItemTemplateMw,\n\n  ...withName([\n    ['DatePicker', DatePickerMw],\n    ['Rate', RateMw],\n    ['Switch', SwitchMw],\n    ['TextArea', TextAreaMw],\n    ['Password', PasswordMw],\n    ['RadioGroup', RadioGroupMw],\n  ]),\n\n  CheckboxGroupMw,\n  CheckboxMw,\n  SelectMw,\n  InputMw,\n  InputNumberMw,\n  NotSupportedMw,\n];\n\nexport default preset;\n","import * as React from 'react';\nimport Layout from '../layouts/main';\nimport { NextPage } from 'next';\n\nimport DemoForm from '../components/DemoForm';\n\nconst code = `const schema = {\n  title: 'A registration form',\n  description: 'A simple form example.',\n  type: 'object',\n  required: ['firstName', 'lastName'],\n  definitions: {\n    firstName: {\n      type: 'string',\n      title: 'First name',\n    },\n    lastName: {\n      $id: '#last-name',\n      type: 'string',\n      title: 'Last name',\n    },\n  },\n  properties: {\n    firstName: {\n      $ref: \"#/definitions/firstName\",\n    },\n    lastName: {\n      $ref: '#last-name',\n    },\n    age: {\n      type: 'integer',\n      title: 'Age of person',\n      description: '(earthian year)',\n    },\n    dof: {\n      type: 'string',\n      title: 'Date of Birth',\n    },\n    bio: {\n      type: 'string',\n      title: 'Bio',\n    },\n    password: {\n      type: 'string',\n      title: 'Password',\n      description: 'Hint: Make it strong!',\n      minLength: 3,\n    },\n    telephone: {\n      type: 'string',\n      title: 'Telephone',\n      minLength: 10,\n    },\n    term: {\n      type: 'boolean',\n      title: 'Accept',\n    },\n  },\n};\n\nconst extraProps = {\n  row: { justify: 'space-between' },\n  properties: {\n    firstName: { col: { span:11 } },\n    lastName: { col: { span:11 } },\n    bio: {\n      component: 'TextArea',\n      props: {\n        placeholder: 'Roundhouse kicking asses since 1940',\n      },\n    },\n    password: {\n      component: 'Password',\n    },\n    dof: {\n      component: 'DatePicker',\n    }\n  },\n};\n\nconst middlewares = [\n  FormDataViewerMw,\n\n  // SubmitButtonMw,\n  // ValidateMw,\n  SubmitButtonWithValidationMw,\n\n  ExtraPropsMw,\n  ColMw,\n  FieldsetTemplateMw,\n  RowMw,\n  ...schemaMws,\n  FormItemTemplateMw,\n\n  ...withName([\n    [ 'DatePicker', DatePickerMw ],\n    [ 'Rate', RateMw ],\n    [ 'Switch', SwitchMw ],\n    [ 'TextArea', TextAreaMw ],\n    [ 'Password', PasswordMw ],\n    [ 'RadioGroup', RadioGroupMw ],\n  ]),\n\n  CheckboxGroupMw,\n  CheckboxMw,\n  SelectMw,\n  InputMw,\n  InputNumberMw,\n  NotSupportedMw,\n];\n\nrender(\n  <Form\n    defaultData={{}}\n    layout=\"vertical\"\n    schema={schema}\n    extraProps={extraProps}\n    middlewares={middlewares}\n  />\n);\n`;\n\nconst IndexPage: NextPage = () => {\n  return (\n    <Layout>\n      <DemoForm code={code} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AA1CA;AACA;AA4CA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AA0BA;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAGA;AAEA;AACA;AAmHA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/simple-middlewares.js.9832755c4af51c65f7cc.hot-update.js","sources":["webpack:///./pages/simple-middlewares.tsx"],"sourcesContent":["import * as React from 'react';\nimport Layout from '../layouts/main';\nimport { NextPage } from 'next';\nimport { AntdFormMiddlewareProps } from '../src/share';\nimport { Button } from 'antd';\n\nimport DemoForm from '../components/DemoForm';\n\nconst schema = {\n  title: 'A registration form',\n  description: 'A simple form example.',\n  type: 'object',\n  required: ['username', 'email'],\n  properties: {\n    username: { type: 'string' },\n    firstname: { type: 'string' },\n    lastname: { type: 'string' },\n    email: { type: 'string' },\n  },\n};\n\nconst extraProps = {\n  row: { justify: 'space-between' },\n  properties: {\n    firstname: { col: { span: 11 } },\n    lastname: { col: { span: 11 } },\n  },\n};\n\nconst defaultData = {\n  username: 'jhon',\n  firstname: 'Jhon',\n  lastname: 'Smith',\n};\n\nconst MyButtonsMw: React.FC<AntdFormMiddlewareProps> = (props) => {\n  const { parent, next } = props;\n\n  // if not on the root node, pass the control to the next middleware\n  if (parent) return next(props);\n\n  return (\n    <>\n      {next(props)}\n      <Button type=\"primary\">Submit</Button> <Button>Clear</Button> <Button>Reset</Button>{' '}\n    </>\n  );\n};\n\nconst code = `\nconst middlewares = [\n  MyButtonsMw,\n  ExtraPropsMw,\n  ColMw,\n  FieldsetTemplateMw,\n  RowMw,\n  FormItemTemplateMw,\n  ...schemaMws,\n  InputMw,\n  NotSupportedMw,\n];\n\nrender(\n  <Form\n    defaultData={defaultData}\n    layout=\"vertical\"\n    schema={schema}\n    extraProps={extraProps}\n    middlewares={middlewares}\n  />\n);\n`;\n\nconst IndexPage: NextPage = () => {\n  return (\n    <Layout>\n      <DemoForm code={code} scope={{ schema, extraProps, defaultData, MyButtonsMw }} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AALA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAuBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/dynamic-array.js.6c47a6269db49a6e82fb.hot-update.js","sources":["webpack:///./middlewares/ValidateMw.tsx"],"sourcesContent":["import React from 'react';\nimport Ajv from 'ajv';\nimport { JSONSchema7 } from 'json-schema';\nimport { Alert } from 'antd';\nimport { FormMiddlewareProps } from '../core/src';\n\nconst ajv = new Ajv({\n  errorDataPath: 'property',\n  allErrors: true,\n  multipleOfPrecision: 8,\n  schemaId: 'auto',\n  unknownFormats: 'ignore',\n});\n\nexport type ErrorObject = Ajv.ErrorObject;\n\ninterface ErrorsProps {\n  errors?: ErrorObject[];\n}\n\nexport function validate(schema: JSONSchema7, data: any) {\n  console.log(schema.properties && Object.keys(schema.properties));\n  ajv.validate(schema, data);\n  return ajv.errors;\n}\n\nexport const ValidateMw: React.FC<FormMiddlewareProps & ErrorsProps> = (props) => {\n  const { schema, data, next, parent } = props;\n  const [errors, ajvException] = React.useMemo(() => {\n    try {\n      return [parent || typeof schema === 'boolean' ? null : validate(schema, data), null];\n    } catch (err) {\n      return [null, err];\n    }\n  }, [schema, data]);\n  const newProps = React.useMemo(() => ({ ...props, errors }), [errors, props]);\n  return ajvException ? (\n    <>\n      <Alert message=\"Ajv exception\" description={ajvException.message} type=\"error\" showIcon />\n      {next(props)}\n    </>\n  ) : (\n    next(errors ? newProps : props)\n  );\n};\n\nexport default ValidateMw;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;A","sourceRoot":""}